Logging
=======

Since version 0.18.0 :program:`rebase-helper` uses standard module-level loggers.

There are also 3 loggers with a special purpose:

=============================== =============================================================================
Logger name                     Purpose
=============================== =============================================================================
:samp:`rebasehelper.traceback`  traceback generated by unhandled exceptions
:samp:`rebasehelper.summary`    messages forming the rebase summary
:samp:`rebasehelper.report`     messages forming the textual rebase report (used by :samp:`text` output tool)
=============================== =============================================================================


:program:`rebase-helper` uses :class:`rebasehelper.logger.CustomLogger` logger class which provides extra
logging levels.

:mod:`rebasehelper.logger` module provides two utility functions to setup default handlers.
:meth:`rebasehelper.logger.create_stream_handlers` sets up the default console handlers for
:samp:`rebasehelper` and :samp:`rebasehelper.summary` loggers.
:meth:`rebasehelper.logger.create_file_handlers` sets up the default file handlers for :samp:`rebasehelper` logger,
with INFO, VERBOSE and DEBUG levels. The respective log files are located in :file:`rebase-helper-results/logs/`.


Examples
--------

.. code-block:: python

    # use a single module and get logs from it

    import logging

    from rebasehelper.specfile import SpecFile

    logger = logging.getLogger('rebasehelper.specfile')
    logger.addHandler(logging.StreamHandler())

    spec = SpecFile('test.spec')
    spec.set_release_number(2)

.. code-block:: python

    # run a complete rebase with default log handlers

    from rebasehelper.logger import create_stream_handlers
    from rebasehelper.config import Config
    from rebasehelper.cli import CLI
    from rebasehelper.application import Application

    create_stream_handlers()
    config = Config()
    cli = CLI()
    config.merge(cli)
    # create_file_handlers() is called in Application.setup()
    exec_dir, res_dir = Application.setup(config)
    app = Application(config, exec_dir, res_dir)
    app.run()
